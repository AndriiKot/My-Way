!!!
git submodule update --init --recursive
!!!

git submodule update --init --recursive
    скачивает все submodule даже если они
    входят в другой submodule

Git submodules — это механизм, 
позволяющий включать один Git-репозиторий внутри другого. 
Это полезно, когда вы хотите использовать сторонние библиотеки или модули, 
которые находятся в отдельных репозиториях. 
Вот основные операции, которые можно выполнять с submodules в Git:

1. **Добавление submodule:**
   Чтобы добавить submodule, используйте команду:
   ```bash
   git submodule add <репозиторий> [путь]
   ```
   Например:
   ```bash
   git submodule add https://github.com/user/repo.git path/to/submodule
   ```

2. **Инициализация submodule:**
   После клонирования репозитория с submodules, необходимо инициализировать их:
   ```bash
   git submodule init
   ```

3. **Обновление submodule:**
   Чтобы обновить submodule до последней версии на удаленном сервере, выполните:
   ```bash
git submodule update --remote --merge
   ```

4. **Клонирование репозитория с submodules:**
   При клонировании репозитория, содержащего submodules, используйте флаг `--recurse-submodules`:
   ```bash
git clone --recurse-submodules <репозиторий>
   ```

5. **Получение информации о статусе submodule:**
   Чтобы проверить статус submodules, используйте:
   ```bash
git submodule status
   ```

6. **Удаление submodule:**
   Чтобы удалить submodule, необходимо выполнить несколько шагов:
   - Удалите строку с submodule из файла `.gitmodules`.
   - Удалите соответствующую запись из файла `.git/config`.
   - Удалите сам submodule (папку) из рабочей директории.
   - Удалите изменения из индекса:
     ```bash
     git rm --cached path/to/submodule
     ```

7. **Проверка изменений в submodule:**
   Если вы внесли изменения в submodule и хотите зафиксировать их, 
   сначала перейдите в директорию submodule и выполните 
   стандартные команды Git (`git add`, `git commit`, `git push`).

8. **Синхронизация submodule:**
   Если вы хотите синхронизировать submodule с его удаленной версией, используйте:
   ```bash
git submodule sync
   ```

Эти операции позволяют эффективно управлять submodules в вашем проекте. 
Обратите внимание, что работа с submodules может быть несколько сложнее, 
чем с обычными репозиториями, 
поэтому важно тщательно следить за их состоянием и обновлением.
